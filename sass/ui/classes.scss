/**
 * ui/classes.scss
 *
 * CSS classes, abstractions etc.
 */

/* SEPARATION ABSTRACTION */
.separated {
    border: none;
    border-bottom: 1px solid $separateColour;
    position: relative;

    &:after {
        content: '';
        border-bottom: 1px solid $white;
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 100%;
        height: 1px;
    }
}
.spaced {
    padding-top: $standardSpacing;
}

.brand {
    text-decoration: none;
    color: $baseColour;
}
.aligned {
    text-align: center;
}
.standout {
    border: 1px solid $separateColour;
    line-height: 0;
    padding: 5px;
}

/** PORTFOLIO ITEMS **/
.portfolio {
    overflow: hidden;
    list-style: none;
    padding: 0;
}
    .portfolio__item {
        float: left;
        width: 18em; /* 288px */
        height: 15em; /* 240px */
        position: relative;
        margin: 0 0 3em 0;
        *margin-bottom: $standardSpacing;
        @include prefix(perspective, 1100px);
        @media screen and (min-width: $tablet) {
            float: left;
            margin-right: 1.5em;
        }
        &:nth-child(3) {
            @media screen and (min-width: $desktop) {
                margin-right: 0;
            }
        }
    }
    .portfolio__wrapper {
        position: absolute;
        height: 100%;
        width: 100%;
        @include prefix(transform-style, preserve-3d);
        @include prefix(transition, all 0.5s ease-in-out);
        &:hover {
            @media screen and (min-width: $tablet) {
                @include prefix(transform, rotateY(180deg));
            }
        }
    }
    .portfolio__image {
        position: absolute;
        @include prefix(backface-visibility, hidden);
    }
    .portfolio__info {
        position: absolute;
        background: $alternateColour;
        background: rgba(90, 121, 139, 0.8);
        height: 100%;
        width: 100%;
        color: $white;
        padding: $standardSpacing;
        *padding: 0.5em;
        @include prefix(box-sizing, border-box);
        @include prefix(backface-visibility, hidden);
        @include prefix(transform, rotateY(180deg));
    }
    .portfolio__title {
        color: $white;
        text-align: left;
        font-size: 1.5rem;
        line-height: 1;
        margin-bottom: 1em; /* 1.5/1.5 */
    }
    .portfolio__link {
        color: $white;
        text-decoration: underline;
        &:hover {
            @media screen and (min-width: $tablet) {
                color: $white;
            }
        }
    }

/**
 * Code styles
 */
pre {
    padding: $standardSpacing;
    margin-bottom: $standardSpacing;
    background-color: #444444;
    color: #000;
    font-family: monospace;
    @include prefix(border-radius, 5px);
    overflow: auto;
}
code {
    color: $alternateColour;
    font-family: monospace;

}
code.html {
    color: #FF9988;
}
.hll { background-color: #ffffcc }
.c { color: #B729D9; font-style: italic } /* Comment */
.err { color: #a40000; border: 1px solid #ef2929 } /* Error */
.g { color: #ffffff } /* Generic */
.k { color: #FF8400 } /* Keyword */
.l { color: #ffffff } /* Literal */
.n { color: #ffffff } /* Name */
.o { color: #E0882F } /* Operator */
.x { color: #ffffff } /* Other */
.p { color: #999999 } /* Punctuation */
.cm { color: #B729D9; font-style: italic } /* Comment.Multiline */
.cp { color: #a0a0a0 } /* Comment.Preproc */
.c1 { color: #B729D9; font-style: italic } /* Comment.Single */
.cs { color: #B729D9; font-style: italic } /* Comment.Special */
.gd { color: #a40000 } /* Generic.Deleted */
.ge { color: #ffffff; font-style: italic } /* Generic.Emph */
.gr { color: #ef2929 } /* Generic.Error */
.gh { color: #000080 } /* Generic.Heading */
.gi { color: #00A000 } /* Generic.Inserted */
.go { color: #808080 } /* Generic.Output */
.gp { color: #745334 } /* Generic.Prompt */
.gs { color: #ffffff; font-weight: bold } /* Generic.Strong */
.gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.gt { color: #a40000; font-weight: bold } /* Generic.Traceback */
.kc { color: #004461 } /* Keyword.Constant */
.kd { color: #004461 } /* Keyword.Declaration */
.kn { color: #004461 } /* Keyword.Namespace */
.kp { color: #004461 } /* Keyword.Pseudo */
.kr { color: #004461 } /* Keyword.Reserved */
.kt { color: #004461 } /* Keyword.Type */
.ld { color: #ffffff } /* Literal.Date */
.m { color: #1299DA } /* Literal.Number */
.s { color: #56DB3A } /* Literal.String */
.na { color: #ffffff } /* Name.Attribute */
.nb { color: #ffffff } /* Name.Builtin */
.nc { color: #ffffff } /* Name.Class */
.no { color: #ffffff } /* Name.Constant */
.nd { color: #808080 } /* Name.Decorator */
.ni { color: #ce5c00 } /* Name.Entity */
.ne { color: #cc0000 } /* Name.Exception */
.nf { color: #ffffff } /* Name.Function */
.nl { color: #f57900 } /* Name.Label */
.nn { color: #ffffff } /* Name.Namespace */
.nx { color: #ffffff } /* Name.Other */
.py { color: #ffffff } /* Name.Property */
.nt { color: #cccccc } /* Name.Tag */
.nv { color: #ffffff } /* Name.Variable */
.ow { color: #E0882F } /* Operator.Word */
.w { color: #f8f8f8; text-decoration: underline } /* Text.Whitespace */
.mf { color: #1299DA } /* Literal.Number.Float */
.mh { color: #1299DA } /* Literal.Number.Hex */
.mi { color: #1299DA } /* Literal.Number.Integer */
.mo { color: #1299DA } /* Literal.Number.Oct */
.sb { color: #56DB3A } /* Literal.String.Backtick */
.sc { color: #56DB3A } /* Literal.String.Char */
.sd { color: #B729D9; font-style: italic } /* Literal.String.Doc */
.s2 { color: #56DB3A } /* Literal.String.Double */
.se { color: #56DB3A } /* Literal.String.Escape */
.sh { color: #56DB3A } /* Literal.String.Heredoc */
.si { color: #56DB3A } /* Literal.String.Interpol */
.sx { color: #56DB3A } /* Literal.String.Other */
.sr { color: #56DB3A } /* Literal.String.Regex */
.s1 { color: #56DB3A } /* Literal.String.Single */
.ss { color: #56DB3A } /* Literal.String.Symbol */
.bp { color: #3465a4 } /* Name.Builtin.Pseudo */
.vc { color: #ffffff } /* Name.Variable.Class */
.vg { color: #ffffff } /* Name.Variable.Global */
.vi { color: #ffffff } /* Name.Variable.Instance */
.il { color: #1299DA } /* Literal.Number.Integer.Long */